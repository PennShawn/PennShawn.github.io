 ---
title: 偏向锁、轻量级锁、自旋锁、重量级锁
categories: 
 - 技术
tags:
 - Java
 - 多线程
---

Java中对象一般由三部分组成:对象头、实例数据和填充字节(如果大小是8bit的倍数则不需要)

非数组对象的对象头由两部分组成:"Mark Word"和指向类的元数据的指针.

Mark Word中记录对象的hashCode,锁标志和GC信息等.在32位JVM中长32bit,64位JVM中长64bit.

#### 偏向锁
如果一个线程A访问对象o,发现o的锁状态是无锁,是否偏向状态为否,则把o的锁状态设为偏向锁,偏向状态设为是,并在记录偏向锁的位置上设置A的id.下一次,A在获取o的锁时,就可以直接执行A中的代码.比较快

#### 轻量级锁
如果这时候,有个线程B来和A抢占o的资源,把偏向锁设为B失败了,就会升级为轻量级锁.在B的线程中创建一个指针p指向Mark Word,并在Mark Word的轻量级锁标志位设为p的地址.

#### 自旋锁
如果一个线程获取轻量级锁失败,那么它会重复调用获取锁的请求而不是阻塞,这时候它会一直占着CPU时间.

#### 重量级锁
如果自旋锁重试还是失败的话,那么轻量级锁就会升级成重量级锁,线程获取不到锁的话就会阻塞.
